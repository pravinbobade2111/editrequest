<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Appointments</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.2/axios.min.js"></script>
</head>
<body>

<div id="appointmentsList">
    <!-- User details with edit and delete icons will be displayed here -->
</div>

<!-- Main registration form -->
<form id="registrationForm">
    <label for="name">Name:</label>
    <input type="text" id="name" name="name" required>

    <label for="date">Date:</label>
    <input type="date" id="date" name="date" required>

    <button type="submit">Submit</button>
</form>

<script>
    // Function to fetch and display appointments
    function fetchAndDisplayAppointments() {
        axios.get('https://crudcrud.com/api/8e23919fd76846508df8dd15c3e59333/appointments')
            .then(response => {
                const appointments = response.data;
                const appointmentsList = document.getElementById('appointmentsList');

                // Clear existing content
                appointmentsList.innerHTML = '';

                // Display appointments with edit and delete icons
                appointments.forEach(appointment => {
                    const appointmentItem = document.createElement('div');
                    appointmentItem.textContent = `Name: ${appointment.name}, Date: ${appointment.date}`;

                    // Create edit icon
                    const editIcon = document.createElement('span');
                    editIcon.innerHTML = ' &#x270E;'; // Unicode for a pencil icon

                    // Attach click event listener to edit icon
                    editIcon.addEventListener('click', () => editAppointment(appointment));

                    // Append edit icon to appointment item
                    appointmentItem.appendChild(editIcon);

                    // Append appointment item to the list
                    appointmentsList.appendChild(appointmentItem);
                });
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    // Function to edit an appointment
    function editAppointment(appointment) {
        // Populate the form with the selected user details
        document.getElementById('name').value = appointment.name;
        document.getElementById('date').value = appointment.date;

        // Set up form submission with updated data
        document.getElementById('registrationForm').onsubmit = function (event) {
            event.preventDefault(); // Prevent default form submission

            // Get updated data from the form
            const updatedName = document.getElementById('name').value;
            const updatedDate = document.getElementById('date').value;

            // Make a PUT or PATCH request to update user details
            axios.put(`https://crudcrud.com/api/8e23919fd76846508df8dd15c3e59333/${appointment._id}`, {
                name: updatedName,
                date: updatedDate,
            })
            .then(response => {
                console.log('PUT Request Successful:', response.data);

                // Update the corresponding user detail on the website
                appointment.name = updatedName;
                appointment.date = updatedDate;

                // Re-fetch and display appointments to update the UI
                fetchAndDisplayAppointments();
            })
            .catch(error => {
                console.error('Error:', error);
            });
        };
    }

    // Event listener for DOMContentLoaded
    document.addEventListener('DOMContentLoaded', fetchAndDisplayAppointments);
</script>

</body>
</html>
